# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# <SED> 
# Auto import env vars from shell 
set $VTERM st -f mono:pixelsize=14
set $FILEMANAGER $VTERM -e ranger
set $BROWSER icecat
# </SED>

# i3 config file (v4)
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
set $mod Mod4

# colors
set $bg-color            #2f343f
set $inactive-bg-color   #3d4351
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent $urgent-bg-color $urgent-bg-color $text-color #00ff00

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $VTERM

# kill focused window
bindsym $mod+Shift+a kill

# start dmenu (a program launcher)
#bindsym $mod+d exec rofi -show run -kb-accept-alt
bindsym $mod+d exec dmenu_run -l 10
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
bindsym $mod+a focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1    "1:1"
set $ws2    "2:2"
set $ws3    "3:3"
set $ws4    "4:4"
set $ws5    "5:5"
set $ws6    "6:6"
set $ws7    "7:7"
set $ws8    "8:8"
set $ws9    "9:9"
set $ws10   "10:10"
set $ws11   "11:11"
set $ws12   "12:12"

set $wsf1   "13:F1"
set $wsf2   "14:F2"
set $wsf3   "15:F3"
set $wsf4   "16:F4"
set $wsf5   "17:F5"
set $wsf6   "18:F6"
set $wsf7   "19:F7"
set $wsf8   "20:F8"
set $wsf9   "21:F9"
set $wsf10  "22:F10"
set $wsf11  "23:F11"
set $wsf12  "24:F12"

# Fast workspace switch
bindsym $mod+Tab workspace next 
bindsym $mod+Shift+Tab workspace prev

# workspace default monitors
workspace $ws1 output LVDS
workspace $ws2 output LVDS
workspace $ws3 output LVDS
workspace $ws4 output LVDS
workspace $ws5 output LVDS
workspace $ws6 output LVDS
workspace $ws7 output LVDS
workspace $ws8 output LVDS
workspace $ws9 output LVDS
workspace $ws10 output LVDS
workspace $ws11 output LVDS
workspace $ws12 output LVDS

workspace $wsf1 output VGA-0
workspace $wsf2 output VGA-0
workspace $wsf3 output VGA-0
workspace $wsf4 output VGA-0
workspace $wsf5 output VGA-0
workspace $wsf6 output VGA-0
workspace $wsf7 output VGA-0
workspace $wsf8 output VGA-0
workspace $wsf9 output VGA-0
workspace $wsf10 output VGA-0
workspace $wsf11 output VGA-0
workspace $wsf12 output VGA-0

# switch to workspace
bindsym $mod+ampersand workspace $ws1
bindsym $mod+eacute workspace $ws2
bindsym $mod+quotedbl workspace $ws3
bindsym $mod+apostrophe workspace $ws4
bindsym $mod+parenleft workspace $ws5
bindsym $mod+minus workspace $ws6
bindsym $mod+egrave workspace $ws7
bindsym $mod+underscore workspace $ws8
bindsym $mod+ccedilla workspace $ws9
bindsym $mod+agrave workspace $ws10
bindsym $mod+parenright workspace $ws11
bindsym $mod+equal workspace $ws12

bindsym $mod+F1 workspace $wsf1
bindsym $mod+F2 workspace $wsf2
bindsym $mod+F3 workspace $wsf3
bindsym $mod+F4 workspace $wsf4
bindsym $mod+F5 workspace $wsf5
bindsym $mod+F6 workspace $wsf6
bindsym $mod+F7 workspace $wsf7
bindsym $mod+F8 workspace $wsf8
bindsym $mod+F9 workspace $wsf9
bindsym $mod+F10 workspace $wsf10
bindsym $mod+F11 workspace $wsf11
bindsym $mod+F12 workspace $wsf12

# move focused container to workspace
bindsym $mod+Shift+ampersand move container to workspace $ws1
bindsym $mod+Shift+eacute move container to workspace $ws2
bindsym $mod+Shift+quotedbl move container to workspace $ws3
bindsym $mod+Shift+apostrophe move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+minus move container to workspace $ws6
bindsym $mod+Shift+egrave move container to workspace $ws7
bindsym $mod+Shift+underscore move container to workspace $ws8
bindsym $mod+Shift+ccedilla move container to workspace $ws9
bindsym $mod+Shift+agrave move container to workspace $ws10
bindsym $mod+Shift+parenright move container to workspace $ws11
bindsym $mod+Shift+plus move container to workspace $ws12

bindsym $mod+Shift+F1 move container to workspace $wsf1
bindsym $mod+Shift+F2 move container to workspace $wsf2
bindsym $mod+Shift+F3 move container to workspace $wsf3
bindsym $mod+Shift+F4 move container to workspace $wsf4
bindsym $mod+Shift+F5 move container to workspace $wsf5
bindsym $mod+Shift+F6 move container to workspace $wsf6
bindsym $mod+Shift+F7 move container to workspace $wsf7
bindsym $mod+Shift+F8 move container to workspace $wsf8
bindsym $mod+Shift+F9 move container to workspace $wsf9
bindsym $mod+Shift+F10 move container to workspace $wsf10
bindsym $mod+Shift+F11 move container to workspace $wsf11
bindsym $mod+Shift+F12 move container to workspace $wsf12

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+x restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym m resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# projector mode VGA
set $VGA $(xrandr | grep -m 1 -Po "(VGA[\w-]+)")
set $MONITOR_MENU "[↑|↓|←|→] vga position | [O]ff vga "
bindsym $mod+p mode $MONITOR_MENU
mode $MONITOR_MENU {
    # bindsym e exec xrandr --output $DISPLAY --auto, mode "default"
    bindsym Up exec xrandr --output $VGA --auto --above $DISPLAY, mode "default"
    bindsym Down exec xrandr --output $VGA --auto --below $DISPLAY, mode "default"
    bindsym Left exec xrandr --output $VGA --auto --left-of $DISPLAY, mode "default"
    bindsym Right exec xrandr --output $VGA --auto --right-of $DISPLAY, mode "default"
    bindsym o exec xrandr --output $VGA --off, mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available) on primary monitor
bar {
    # identifier
    id bar-0

    # show state
    mode hide
    hidden_state hide 
    modifier none
    #binding_mode_indicator yes
    
    # output and position
    position bottom
    output primary
    #tray_output primary
    
    # content 
    strip_workspace_numbers yes
    i3bar_command i3bar
    status_command i3blocks -c ~/.config/i3/blocks

    # style
    font pango:monospace, Font Awesome 5 Free 10
    colors {
        background $bg-color
        separator #757575
        #                  border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
    }
}
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available) for VGA monitor
bar {
    # identifier
    id bar-1

    # show state
    mode dock
    #hidden_state hide
    #modifier none
    #binding_mode_indicator yes
    
    # output and position
    position bottom
    output $(xrandr | grep -m 1 -Po "(VGA[\w-]+)")
    
    # content 
    strip_workspace_numbers yes
    i3bar_command i3bar
    status_command i3blocks -c ~/.config/i3/blocks
    
    # style
    font pango:monospace, Font Awesome 5 Free 10
    colors {
        background $bg-color
        separator #757575
        #                  border             background         text
        focused_workspace  $bg-color          $bg-color          $text-color
        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
    }
}
# status bar hide/show toggle
bindsym $mod+b bar hidden_state toggle

# Playerctl control
set $PLAYER_MENU "Prev[o], Play/Pause[p], Next[^], Stop[$], Vol+[)], Vol-[=]"
bindsym $mod+Shift+p mode $PLAYER_MENU
mode $PLAYER_MENU {
    bindsym o exec playerctl previous
    bindsym p exec playerctl play-pause
    bindsym dead_circumflex exec playerctl next
    bindsym dollar exec playerctl stop
    bindsym parenright exec playerctl volume 0.1-
    bindsym plus exec playerctl volume 0.1+
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Useful
bindsym $mod+x exec ~/.lock
bindsym $mod+i exec ~/.bg_switcher

# Extra Fonts
bindsym $mod+asterisk exec ~/.local/lib/i3cmds/dmenuunicode
bindsym $mod+Shift+asterisk exec ~/.local/lib/i3cmds/dmenufontawesome

# Apps shortcuts
bindsym $mod+Shift+r exec $FILEMANAGER
bindsym $mod+Shift+b exec $BROWSER

# Gaps
for_window [class="^.*"] border pixel 4
gaps inner 4
gaps outer 1

# Floating windows
for_window [class="vlc"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Pavucontrol"] floating enable

# Caprine
exec --no-startup-id caprine
for_window [class="caprine"] floating enable
for_window [class="caprine"] resize set 1200 700
for_window [class="caprine"] move workspace $ws11
for_window [class="caprine"] move position center

# Discord
exec --no-startup-id discord
for_window [class="discord"] floating enable
for_window [class="discord"] resize set 1200 700
for_window [class="discord"] move workspace $ws12
for_window [class="discord"] move position center

# Hidden Screen
for_window [instance="hidden_term"] floating enable
for_window [instance="hidden_term"] resize set 1200 700
for_window [instance="hidden_term"] move scratchpad
for_window [instance="hidden_term"] border pixel 5
for_window [instance="hidden_term"] sticky enable
bindsym $mod+t [instance="hidden_term"] scratchpad show; [instance="hidden_term"] move position center 

# Hidden Monitor
for_window [instance="hidden_mon"] floating enable
for_window [instance="hidden_mon"] resize set 1500 800
for_window [instance="hidden_mon"] move scratchpad
for_window [instance="hidden_mon"] border pixel 5
for_window [instance="hidden_mon"] sticky enable
bindsym $mod+m [instance="hidden_mon"] scratchpad show; [instance="hidden_mon"] move position center 

# Screenshot:
bindsym $mod+Shift+exclam exec scrot ~/Pictures/Screenshots/%Y-%m-%d-%T-screenshot.png

# Screencast:
bindsym $mod+exclam exec ~/.local/lib/i3cmds/dmenurecord

# Video: webcam
for_window [title="mpvfloat"] floating enable
for_window [title="mpvfloat"] sticky enable
for_window [title="mpvfloat"] border pixel 0
no_focus [title="mpvfloat"]
bindsym $mod+c exec ~/.local/bin/camtoggle

# tools
exec --no-startup-id syncthing --no-browser
exec --no-startup-id compton -f
exec --no-startup-id dunst -conf ~/.config/dunst/dunstrc
exec --no-startup-id xbanish

# unused
# xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'
#bindsym $mod+a exec true
#bindsym $mod+z exec true
#bindsym $mod+e exec true
#bindsym $mod+r exec true
#bindsym $mod+t exec true 
bindsym $mod+y exec true
bindsym $mod+u exec true 
#bindsym $mod+i exec true
bindsym $mod+o exec true
#bindsym $mod+p exec true
bindsym $mod+dead_circumflex exec true
bindsym $mod+dollar exec true
#bindsym $mod+q exec true
#bindsym $mod+s exec true
#bindsym $mod+d exec true
#bindsym $mod+f exec true
bindsym $mod+g exec true
#bindsym $mod+h exec true
bindsym $mod+j exec true
bindsym $mod+k exec true
bindsym $mod+l exec true
#bindsym $mod+m exec true
bindsym $mod+ugrave exec true
#bindsym $mod+asterisk exec true
bindsym $mod+w exec true
#bindsym $mod+x exec true
#bindsym $mod+c exec true
#bindsym $mod+v exec true
#bindsym $mod+b exec true
bindsym $mod+n exec true
bindsym $mod+comma exec true
bindsym $mod+semicolon exec true
bindsym $mod+colon exec true
#bindsym $mod+exclam exec true
#bindsym $mod+Shift+a exec true
bindsym $mod+Shift+z exec true
#bindsym $mod+Shift+e exec true
#bindsym $mod+Shift+r exec true
bindsym $mod+Shift+t exec true
bindsym $mod+Shift+y exec true
bindsym $mod+Shift+u exec true
bindsym $mod+Shift+i exec true
bindsym $mod+Shift+o exec true
#bindsym $mod+Shift+p exec true
bindsym $mod+Shift+dead_circumflex exec true
bindsym $mod+Shift+dollar exec true
bindsym $mod+Shift+q exec true
bindsym $mod+Shift+s exec true
bindsym $mod+Shift+d exec true
bindsym $mod+Shift+f exec true
bindsym $mod+Shift+g exec true
bindsym $mod+Shift+h exec true
bindsym $mod+Shift+j exec true
bindsym $mod+Shift+k exec true
bindsym $mod+Shift+l exec true
bindsym $mod+Shift+m exec true
bindsym $mod+Shift+ugrave exec true
#bindsym $mod+Shift+asterisk exec true
bindsym $mod+Shift+w exec true
#bindsym $mod+Shift+x exec true
#bindsym $mod+Shift+c exec true
bindsym $mod+Shift+v exec true
#bindsym $mod+Shift+b exec true
bindsym $mod+Shift+n exec  true
bindsym $mod+Shift+comma exec true
bindsym $mod+Shift+semicolon exec true
bindsym $mod+Shift+colon exec true
#bindsym $mod+Shift+exclam exec true

